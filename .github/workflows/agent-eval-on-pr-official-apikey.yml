name: "Agent Evaluation on Pull Request (Official Action - API Key)"

on:
  pull_request:
    branches:
      - main
    paths:
      - 'agent-setup/**'
      - 'data/agent-eval-data.json'
      - '.github/workflows/agent-eval-on-pr-official-apikey.yml'
  
  workflow_dispatch:
    inputs:
      agent_ids:
        description: 'Comma-separated agent IDs to evaluate'
        required: false
        type: string

permissions:
  contents: read
  pull-requests: write

jobs:
  run-agent-evaluation:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR Branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # No Azure login needed - will use API key in the action
      
      - name: Check for Baseline Results
        id: check-baseline
        run: |
          git fetch origin main
          
          if git show origin/main:evaluation_results/baseline/baseline_metrics.json > /dev/null 2>&1; then
            echo "baseline_exists=true" >> $GITHUB_OUTPUT
            echo "📊 Baseline found on main branch"
            git show origin/main:evaluation_results/baseline/baseline_metrics.json > /tmp/baseline_metrics.json
          else
            echo "baseline_exists=false" >> $GITHUB_OUTPUT
            echo "📝 No baseline found - this will be the first run"
          fi
      
      - name: Set Agent IDs
        id: set-agents
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.agent_ids }}" ]; then
            echo "agent_ids=${{ github.event.inputs.agent_ids }}" >> $GITHUB_OUTPUT
          else
            echo "agent_ids=${{ vars.AGENT_ID_BASELINE }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Display Configuration
        run: |
          echo "🔍 Evaluation Configuration:"
          echo "   Agent IDs: ${{ steps.set-agents.outputs.agent_ids }}"
          echo "   Project Endpoint: ${{ vars.AZURE_AI_PROJECT_ENDPOINT }}"
          echo "   Deployment: ${{ vars.AZURE_DEPLOYMENT_NAME }}"
          echo "   Data Path: ${{ github.workspace }}/data/agent-eval-data.json"
          echo "   Baseline exists: ${{ steps.check-baseline.outputs.baseline_exists }}"
          echo ""
          echo "⚠️ Using API key authentication (federated credentials not configured for PRs)"
      
      - name: Run AI Agent Evaluation
        id: run-evaluation
        uses: microsoft/ai-agent-evals@v2-beta
        env:
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        with:
          azure-ai-project-endpoint: ${{ vars.AZURE_AI_PROJECT_ENDPOINT }}
          deployment-name: ${{ vars.AZURE_DEPLOYMENT_NAME }}
          agent-ids: ${{ steps.set-agents.outputs.agent_ids }}
          data-path: ${{ github.workspace }}/data/agent-eval-data.json
          evaluation-result-view: 'all-scores'
          api-version: ${{ vars.API_VERSION }}
      
      - name: Generate PR Comment
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let comment = "## 🤖 Agent Evaluation Results (Official Action)\n\n";
            
            if ("${{ steps.run-evaluation.outcome }}" === "success") {
              comment += "### ✅ Evaluation Completed\n\n";
              comment += "View detailed results in the [GitHub Actions Summary](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\n";
            } else {
              comment += "### ❌ Evaluation Failed\n\n";
              comment += "Check the [workflow logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.\n\n";
            }
            
            comment += "### 📊 Configuration\n\n";
            comment += `- **Agent IDs:** \`${{ steps.set-agents.outputs.agent_ids }}\`\n`;
            comment += `- **Deployment:** \`${{ vars.AZURE_DEPLOYMENT_NAME }}\`\n`;
            comment += `- **Baseline exists:** ${{ steps.check-baseline.outputs.baseline_exists }}\n\n`;
            comment += "---\n**Workflow:** Official Azure AI Action (microsoft/ai-agent-evals@v2-beta)\n";
            
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const botComment = comments.find(c => 
              c.user.type === 'Bot' && 
              c.body.includes('Official Action')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }
